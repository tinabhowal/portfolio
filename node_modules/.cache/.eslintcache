[{"C:\\Users\\91895\\Downloads\\Career Foundry\\TinaPortfolio\\portfolio\\src\\index.js":"1","C:\\Users\\91895\\Downloads\\Career Foundry\\TinaPortfolio\\portfolio\\src\\reportWebVitals.js":"2","C:\\Users\\91895\\Downloads\\Career Foundry\\TinaPortfolio\\portfolio\\src\\App.js":"3","C:\\Users\\91895\\Downloads\\Career Foundry\\TinaPortfolio\\portfolio\\src\\projects.js":"4","C:\\Users\\91895\\Downloads\\Career Foundry\\TinaPortfolio\\portfolio\\src\\aboutMe.js":"5","C:\\Users\\91895\\Downloads\\Career Foundry\\TinaPortfolio\\portfolio\\src\\contact.js":"6","C:\\Users\\91895\\Downloads\\Career Foundry\\TinaPortfolio\\portfolio\\src\\navbar.js":"7"},{"size":614,"mtime":1687870244004,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1687870244008,"results":"10","hashOfConfig":"9"},{"size":694,"mtime":1687870243956,"results":"11","hashOfConfig":"9"},{"size":5899,"mtime":1688053292530,"results":"12","hashOfConfig":"9"},{"size":7633,"mtime":1688058452006,"results":"13","hashOfConfig":"9"},{"size":3347,"mtime":1688117009159,"results":"14","hashOfConfig":"9"},{"size":1365,"mtime":1687870244006,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18uz6y5",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\91895\\Downloads\\Career Foundry\\TinaPortfolio\\portfolio\\src\\index.js",[],[],"C:\\Users\\91895\\Downloads\\Career Foundry\\TinaPortfolio\\portfolio\\src\\reportWebVitals.js",[],[],"C:\\Users\\91895\\Downloads\\Career Foundry\\TinaPortfolio\\portfolio\\src\\App.js",[],[],"C:\\Users\\91895\\Downloads\\Career Foundry\\TinaPortfolio\\portfolio\\src\\projects.js",[],[],"C:\\Users\\91895\\Downloads\\Career Foundry\\TinaPortfolio\\portfolio\\src\\aboutMe.js",["38"],[],"// import React, { useState, useEffect, useRef } from 'react';\r\n// import './aboutMe.css';\r\n// import image from './images/Frame 8.png';\r\n// import Navbars from './navbar';\r\n// import Map from './map';\r\n// import berlin from './images/berlin.png';\r\n\r\n\r\n// function AboutMe() {\r\n//   const [text, setText] = useState('');\r\n//   const [textComplete, setTextComplete] = useState(false);\r\n//   const [circularpic, setCircularpic] = useState(false);\r\n//   const [namevisible, setNamevisible] = useState(false);\r\n//   const [nameAside, setNameAside] = useState(false); // Initialize with false\r\n//   const profilePictureRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     const message = '<HHello World!/>';\r\n//     let currentIndex = 0;\r\n\r\n//     const timer = setInterval(() => {\r\n//       if (currentIndex === message.length - 1) {\r\n//         clearInterval(timer);\r\n//         setTextComplete(true);\r\n//         return;\r\n//       }\r\n\r\n//       setText((prevText) => prevText + message[currentIndex]);\r\n//       currentIndex++;\r\n//     }, 200);\r\n\r\n//     return () => {\r\n//       clearInterval(timer);\r\n//     };\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (textComplete) {\r\n//       profilePictureRef.current.scrollIntoView({\r\n//         behavior: 'smooth',\r\n//         block: 'start',\r\n//       });\r\n\r\n//       setTimeout(() => {\r\n//         profilePictureRef.current.classList.add('circular');\r\n//         setCircularpic(true);\r\n//       }, 0.02);\r\n\r\n//       setTimeout(() => {\r\n//         setNamevisible(true);\r\n//       }, 1000);\r\n//     }\r\n//   }, [textComplete]);\r\n\r\n//   useEffect(() => {\r\n//     if (namevisible) {\r\n//       setTimeout(() => {\r\n//         profilePictureRef.current.classList.add('sidebar');\r\n//         const name = document.querySelector('.name-reveal');\r\n//         name.classList.add('sidebar');\r\n//         // const container2 = document.querySelector('.container2');\r\n//         // container2.classList.add('sidebar');\r\n\r\n//         // Check if the name element has the sidebar class added\r\n//         const isNameAside = name.classList.contains('sidebar');\r\n//         setNameAside(isNameAside); // Update the value of nameAside state variable\r\n//         if (isNameAside) {\r\n//           setTimeout(() => {\r\n//             const paragraph = document.querySelector('.intro');\r\n//             paragraph.classList.add('intro-visible'); \r\n//             const berlin = document.querySelector('.berlinimage');\r\n//             berlin.classList.add('berlinimage-visible'); \r\n//           }, 1000); \r\n//         }\r\n//       }, 1000);\r\n//     }\r\n//   }, [namevisible]);\r\n\r\n  \r\n  \r\n\r\n//   return (\r\n//     <div className='aboutMe'>\r\n//       <Navbars></Navbars>\r\n\r\n//       <div className={`container ${textComplete ? 'text-complete' : ''}`}>\r\n//         <h1>{text}</h1>\r\n//       </div>\r\n\r\n//       <div className='container2'>\r\n//         <div\r\n//           ref={profilePictureRef}\r\n//           className={`profilePicture ${textComplete ? 'visible' : ''}`}\r\n//         >\r\n//           <img className='img' src={image} alt='profile' />\r\n//         </div>\r\n\r\n//         {circularpic && (\r\n//           <div className='name-reveal'>\r\n//             <div className='mask'></div>\r\n//             <div className='name'>\r\n//               <h2>Tina Bhawal</h2>\r\n//               {nameAside && (\r\n//                 <div className='introDiv'>\r\n//                   <p className='intro'>\r\n//                     Newbie Front-end Developer <br /> \r\n//                     Based in Berlin <br />\r\n//                     Love working on Figma<br />\r\n//                     Can doodle and illustrate for hours<br />\r\n//                     Mom to the cutest dog \r\n//                   </p>\r\n//                 </div>     \r\n//              )}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//         {nameAside && (\r\n//         <div className='map-container'>\r\n        \r\n//          {/* <Map className='map' /> */}\r\n//          <img className='berlinimage' src={berlin} alt='Berlin'></img>\r\n//          </div>\r\n//          )}\r\n//       </div>\r\n      \r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AboutMe;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport './aboutMe.css';\r\nimport image from './images/Frame 8.png';\r\nimport Navbars from './navbar';\r\n\r\n\r\n\r\nfunction AboutMe() {\r\n  const [text, setText] = useState('');\r\n  const [textComplete, setTextComplete] = useState(false);\r\n  const [circularpic, setCircularpic] = useState(false);\r\n  const [textShifted, setTextShifted] = useState(false);\r\n  const [picAtSide, setPicAtSide] = useState(false);\r\n\r\n  const profilePictureRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const message = 'Tiina Bhawal';\r\n    let currentIndex = 0;\r\n\r\n    const timer = setInterval(() => {\r\n      if (currentIndex === message.length - 1) {\r\n        clearInterval(timer);\r\n        setTextComplete(true);\r\n        return;\r\n      }\r\n\r\n      setText((prevText) => prevText + message[currentIndex]);\r\n      currentIndex++;\r\n    }, 200);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    if (textComplete) {\r\n      setTimeout(() => {\r\n                const nameText = document.querySelector('.textElement');\r\n                nameText.classList.add('textShifted');\r\n                setTextShifted(true);\r\n                }, 0.09);\r\n\r\n      setTimeout(() => {\r\n                  if (textShifted) {\r\n                  profilePictureRef.current.classList.add('circular');\r\n                  setCircularpic(true);\r\n                  }\r\n                  }, 0.09);          \r\n      \r\n      setTimeout(() => {\r\n                    if (textShifted) {\r\n                      profilePictureRef.current.style.opacity = '1'; // Set opacity to 1\r\n                    }\r\n                  }, 1000);\r\n\r\n      setTimeout(() => {\r\n                    if (profilePictureRef.current.classList.contains('circular')) {\r\n                      profilePictureRef.current.classList.add('sidebar');\r\n                      setPicAtSide(true);\r\n                    }\r\n                  }, 2000);\r\n    }\r\n     \r\n  }, [textComplete, textShifted]);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    if (picAtSide) {\r\n      const introDiv = document.createElement('div');\r\n      introDiv.classList.add('introDiv');\r\n\r\n      const introP1 = document.createElement('p');\r\n      introP1.textContent = 'Newbie front-end developer';\r\n      introDiv.appendChild(introP1);\r\n\r\n      const introP2 = document.createElement('p');\r\n      introP2.textContent =\r\n        'Love exploring UX/UI tools like Figma and Adobe XD';\r\n      introDiv.appendChild(introP2);\r\n\r\n      const introP3 = document.createElement('p');\r\n      introP3.textContent = 'Can doodle and illustrate for hours';\r\n      introDiv.appendChild(introP3);\r\n\r\n      document.body.appendChild(introDiv);\r\n\r\n      introDiv.classList.add('fade-in-0');\r\n      introP1.classList.add('fade-in-1');\r\n      introP2.classList.add('fade-in-2');\r\n      introP3.classList.add('fade-in-3');\r\n\r\n      return () => {\r\n        document.body.removeChild(introDiv); \r\n      };\r\n    }\r\n  }, [picAtSide]);\r\n\r\n\r\n\r\n  return (\r\n    <div className='aboutMe'>\r\n      <Navbars></Navbars>\r\n\r\n      <div className={`container ${textComplete ? 'text-complete' : ''}`}>\r\n        <h1 className=\"textElement\">{text}</h1>\r\n      </div>\r\n\r\n     \r\n      <div\r\n          ref={profilePictureRef}\r\n          className={`profilePicture ${textComplete ? 'visible' : ''}`}\r\n        >\r\n          <img className='img' src={image} alt='profile' />\r\n        </div>\r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutMe;\r\n\r\n","C:\\Users\\91895\\Downloads\\Career Foundry\\TinaPortfolio\\portfolio\\src\\contact.js",[],[],"C:\\Users\\91895\\Downloads\\Career Foundry\\TinaPortfolio\\portfolio\\src\\navbar.js",[],[],{"ruleId":"39","severity":1,"message":"40","line":146,"column":10,"nodeType":"41","messageId":"42","endLine":146,"endColumn":21},"no-unused-vars","'circularpic' is assigned a value but never used.","Identifier","unusedVar"]